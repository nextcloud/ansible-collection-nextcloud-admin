---
name: Release

"on":
  push:
    branches:
      - main

jobs:
  check_version_change:
    name: Check if the version in galaxy.yml has been updated
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.check-parent-commit.outputs.new_version }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 9.9.9.9

      - name: Check if 'version' has changed in galaxy.yml
        id: check-galaxy-version
        shell: bash
        env:
          version: ${{ steps.previoustag.outputs.tag }}
        run: |
          galaxy_version=$(git diff HEAD~ HEAD -- galaxy.yml | grep 'version:' | awk '{ print $2}')
          if [ (-n "$galaxy_version")] -a ("$galaxy_version" != "$version") ];
          then echo "::set-output name=new_version::true";
          else echo "::set-output name=new_version::false"; fi

  ansible_tests:
    name: Collection plugins tests
    uses: ./.github/workflows/ansible-tests.yml

  full_molecule_tests:
    name: Collection roles tests in large scope
    uses: ./.github/workflows/molecule-tests.yml
    needs: check_version_change
    if: ${{ needs.check_version_change.outputs.new_version and }}
    strategy:
      matrix:
        distros: [debian12, debian11, ubuntu2204, ubuntu2404]
        nc_versions: [latest, nc30, nc29]
    with:
      distro: ${{ matrix.distros }}
      nc_version: ${{ matrix.nc_versions }}
  GH_tag_release:
    name: Release managment.
    runs-on: ubuntu-latest
    needs: [full_molecule_tests, ansible_tests]
    if: ${{ github.ref_name == "main" }}
    steps:
      - name: Detect and tag new version
        id: check-version
        if: steps.check-parent-commit.outputs.new_version
        uses: salsify/action-detect-and-tag-new-version@v2
        with:
          tag-template: "{VERSION}"
          version-command: |
            cat galaxy.yml | grep version: | cut -d' ' -f2

      - name: Publish the release notes
        uses: release-drafter/release-drafter@v6
        with:
          publish: ${{ steps.check-version.outputs.tag != '' }}
          tag: ${{ steps.check-version.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish_to_galaxy:
    needs: GH_tag_release
    name: Deploy the collection to ansible-galaxy
    uses: ./.github/workflows/galaxy-deploy.yml
